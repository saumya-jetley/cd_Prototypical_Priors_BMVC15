name: "DNN_smallobjects"

force_backward: true

#changed the no of outputs

layers {
  top: "data"
  top: "label"
  name: "data"
  type: HDF5_DATA
  hdf5_data_param {
    source: "Data/selbel_33train.txt"
    batch_size:20
  }
  include {phase: TRAIN}
}

layers {
  top: "data"
  top: "label"
  name: "data"
  type: HDF5_DATA
  hdf5_data_param {
    source: "Data/selbel_33test.txt"
    batch_size:1
  }
  include {phase: TEST}
}

layers {
  bottom: "data"
  top: "conv1_7x7"
  name: "conv1_7x7"
  type: CONVOLUTION
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 100
    pad: 0
    kernel_size: 7
    stride: 1
    weight_filler {
      type: "uniform"
      min: -0.05
      max: 0.05
    }
    bias_filler {
      type: "uniform"
      min: -0.05
      max: 0.05
    }
  }
}

layers {
  bottom: "conv1_7x7"
  top: "conv1_7x7"
  name: "conv1_relu_7x7"
  type: RELU
}

layers {
  bottom: "conv1_7x7"
  top: "pool1_2x2"
  name: "pool1_2x2"
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layers {
  bottom: "pool1_2x2"
  top: "conv2_4x4"
  name: "conv2_4x4"
  type: CONVOLUTION
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    pad: 0
    stride: 1
    num_output: 150
    kernel_size: 4
    weight_filler {
      type: "uniform"
      min: -0.05
      max: 0.05
    }
    bias_filler {
      type: "uniform"
      min: -0.05
      max: 0.05
    }
  }
}

layers {
  bottom: "conv2_4x4"
  top: "conv2_4x4"
  name: "conv2_relu_4x4"
  type: RELU
}

layers {
  bottom: "conv2_4x4"
  top: "pool2_2x2"
  name: "pool2_2x2"
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layers {
  bottom: "pool2_2x2"
  top: "conv3_4x4"
  name: "conv3_4x4"
  type: CONVOLUTION
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 250
    pad: 0
    stride: 1
    kernel_size: 4
    weight_filler {
      type: "uniform"
      min: -0.05
      max: 0.05
    }
    bias_filler {
      type: "uniform"
      min: -0.05
      max: 0.05
    }
  }
}

layers {
  bottom: "conv3_4x4"
  top: "conv3_4x4"
  name: "conv3_relu_4x4"
  type: RELU
}

layers {
  bottom: "conv3_4x4"
  top: "pool3_2x2"
  name: "pool3_2x2"
  type: POOLING
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layers{
  bottom: "pool3_2x2"
  top: "fc4"
  name: "fc4"
  type: INNER_PRODUCT
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param{
  num_output: 300
  weight_filler {
      type: "uniform"
      min: -0.05
      max: 0.05
    }
  bias_filler {
      type: "uniform"
      min: -0.05
      max: 0.05
    }
}
}

layers {
bottom: "fc4"
top: "fc4"
name: "relu4"
type: RELU
}

layers {
bottom: "fc4"
top: "fc4"
name: "drop4"
type: DROPOUT
dropout_param {
dropout_ratio: 0.65
}
}

layers {
bottom: "fc4"
top: "fc5"
name: "fc5"
type: INNER_PRODUCT
blobs_lr: 1
blobs_lr: 2
weight_decay: 1
weight_decay: 0
inner_product_param {
num_output:33 #change here
weight_filler {
    type: "uniform"
    min: -0.05
    max: 0.05
    }
bias_filler {
    type: "uniform"
    min: -0.05
    max: 0.05
  }
}
}

layers {
  name: "accuracy"
  type: ACCURACY
  bottom: "fc5"
  bottom: "label"
  top: "accuracy"
  include: { phase: TEST }
}

layers {
  name: "loss"
  type: SOFTMAX_LOSS
  bottom: "fc5"
  bottom: "label"
  top: "loss"
}
